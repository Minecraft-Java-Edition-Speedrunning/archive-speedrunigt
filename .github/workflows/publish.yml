name: 'publish'
on:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Release version'
        required: true
        type: string
      is_prerelease:
        description: 'is Pre-release?'
        required: false
        type: boolean

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        branch: ['1.3.1', '1.4.2', '1.4.7', '1.5.2', '1.6.4', '1.7.2', '1.7.4', '1.7.10', '1.8.0', '1.8.3-15w14a', '1.8.9', '1.9.4', '1.10.2', '1.11.2', '1.12', '1.12.2', '1.13.2', '1.14.4', '1.15.2', '1.16.0-20w14infinite', '1.16.5', '1.17.0', '1.17.1', '1.18.1', '1.18.2', '1.18.2-22w13oneblockatatime', '1.19.2', '1.19.4', '1.20-23w13a_or_b', '1.20.1', '1.20.4', '1.20.4-24w14potato', '1.20.6', '1.21']
    steps:
      - name: Checkout ${{ matrix.branch }}
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ matrix.branch }}

      - name: Read value from Properties-file
        uses: madhead/read-java-properties@latest
        id: properties
        with:
          file: gradle.properties
          all: true

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'adopt'


      - name: Make gradlew executable - ${{ matrix.branch }}
        run: chmod +x ./gradlew
      - name: Build artifacts - ${{ matrix.branch }}
        run: ./gradlew build


      - uses: actions/upload-artifact@v3
        with:
          name: Package
          path: build/libs/*.jar


      - name: Upload artifacts to Modrinth and Curseforge
        if: ${{ inputs.is_prerelease == false }}
        uses: Kir-Antipov/mc-publish@v3.3
        with:
          modrinth-id: jnkd7LkJ
          modrinth-token: ${{ secrets.MODRINTH_TOKEN }}
          modrinth-featured: true
          modrinth-unfeature-mode: subset

          curseforge-id: 538881
          curseforge-token: ${{ secrets.CURSEFORGE_TOKEN }}

          files: build/libs/!(*-@(dev|sources|all)).jar

          name: ${{ inputs.release_version }} (for ${{ steps.properties.outputs.minecraft_version }})
          version: ${{ inputs.release_version }}+${{ steps.properties.outputs.minecraft_version }}
          changelog: Check changelogs in https://github.com/RedLime/SpeedRunIGT/releases/tag/${{ inputs.release_version }}
          game-versions: ${{ steps.properties.outputs.minecraft_version }}
          game-version-filter: any
          version-type: release
          loaders: |
            fabric
            quilt


  publish:
    runs-on: ubuntu-latest
    needs: build
    if: always() && (needs.build.result == 'success')
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
      - uses: actions/download-artifact@v3
        id: download
        with:
          path: build/results
      - name: Publish release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          automatic_release_tag: '${{ inputs.release_version }}'
          repo_token: '${{ secrets.GITHUB_TOKEN }}'
          prerelease: ${{ inputs.is_prerelease }}
          title: ${{ inputs.release_version }}
          files: ${{steps.download.outputs.download-path}}